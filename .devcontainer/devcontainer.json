{
  "name": "AI Ecosystem Development",
  "build": {
    "dockerfile": "Dockerfile" // Make sure Dockerfile exists
  },
  "remoteUser": "vscode",
  "features": {
    // Installs Docker CLI + Server inside the container
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    // <<< ADD THIS FEATURE >>>
    // Installs Node.js, npm, and yarn. Needed for pnpm install in setup.sh
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts" // Or specify a version like "18", "20"
    }
    // <<< END OF ADDITION >>>
  },
  // This script will now run *after* Node.js is installed by the feature
  "postCreateCommand": "./setup.sh", // Make sure setup.sh is executable (chmod +x setup.sh)

  "envFile": ".env",
  "remoteEnv": {
    "FIRESTORE_PROJECT_ID": "${localEnv:GCP_PROJECT_ID}",
    "PINECONE_ENVIRONMENT": "us-west1-gcp"
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.vscode-pylance",
        "ms-azuretools.vscode-docker",
        "hashicorp.terraform",
        "github.vscode-github-actions",
        "ryanluker.vscode-coverage-gutters",
        "njpwerner.autodocstring",
        "kodu-ai.claude-dev-experimental",
        "dbaeumer.vscode-eslint" // Good addition if using JS/TS
      ],
      "settings": {
        "python.linting.enabled": true,
        "python.linting.flake8Enabled": true, // Flake8 installed via pipx/poetry in setup.sh? Ensure accessible
        "python.formatting.provider": "black", // Black installed via pipx/poetry? Ensure accessible
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
          "source.organizeImports": "explicit"
        },
        "python.testing.pytestEnabled": true, // Pytest installed via poetry
        // Add settings for Node/PNPM if desired
        "eslint.packageManager": "pnpm"
      }
    }
  }
}
