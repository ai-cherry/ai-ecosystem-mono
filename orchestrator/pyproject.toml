[tool.poetry]
name = "orchestrator"
version = "0.1.0"
description = "Workflow orchestration for AI ecosystem"
authors = ["Your Team <team@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.95.0"
pydantic = "^1.10.7"
uvicorn = "^0.22.0"
httpx = "^0.24.0"
temporalio = "^1.1.0"
redis = "^4.5.5"
google-cloud-firestore = "^2.11.0"
pinecone-client = "^2.2.1"
openai = "^0.27.8"
langchain = "^0.0.235"
langchain-redis = "^0.0.1"
langchain-pinecone = "^0.0.1"
numpy = "^1.24.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^23.3.0"
flake8 = "^6.0.0"
isort = "^5.12.0"
mypy = "^1.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
markers = [
    "asyncio: mark a test as an asyncio coroutine",
]
testpaths = ["tests"]
asyncio_mode = "auto"
