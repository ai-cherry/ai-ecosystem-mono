name: Terraform Infrastructure

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
      - '.github/workflows/terraform.yml'
  pull_request:
    paths:
      - 'infra/**'
  workflow_dispatch: # Allow manual triggering

env:
  TF_LOG: INFO
  TERRAFORM_VERSION: '1.5.7'

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ./infra
    
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3
      
      # Authenticate to Google Cloud
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          # Reference organization-level secret for GCP authentication
          credentials_json: '${{ secrets.GCP_SA_KEY }}'
      
      # Install the latest version of Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      
      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.GCP_PROJECT_ID }}-terraform-state" \
            -backend-config="prefix=ai-ecosystem"
      
      # Validate Terraform files
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      # Generate Terraform plan
      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="pinecone_api_key=${{ secrets.PINECONE_API_KEY }}" -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" -input=false
        continue-on-error: true
      
      # Comment plan on PR
      - name: Add Plan Comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan üìù\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      # Apply Terraform changes (only on push to main or manual trigger)
      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
        run: terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}" -var="pinecone_api_key=${{ secrets.PINECONE_API_KEY }}" -var="openai_api_key=${{ secrets.OPENAI_API_KEY }}" -input=false
